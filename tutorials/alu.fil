import "primitives/core.fil";
import "primitives/sequential.fil";

comp main<G:3> (
    @interface[G] go:1,
    @[G,G+3] op:1,
    @[G,G+1] left:32,
    @[G,G+1] right:32,
) -> (@[G+2,G+3] out:32) {
    A := new Add[32];
    M := new Mult[32];
    a0 := A<G>(left,right);
    m0 := M<G>(left,right);

    // register to hold adder value until mult is done
    r0 := new Register[32]<G,G+3>(a0.out);

    // mux selects when mult is ready
    mx := new Mux[32]<G+2>(op,r0.out,m0.out);
    out = mx.out;
}